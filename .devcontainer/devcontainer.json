{
  "name": "CITZ SBC Queue Management",
  "dockerComposeFile": "compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",

  "containerEnv": {
    "WATCHPACK_POLLING": "true",
    "CHOKIDAR_USEPOLLING": "true",
    "CHOKIDAR_INTERVAL": "150"
  },

  // Override command to prevent conflicts
  "overrideCommand": false,

  // Init configuration
  "init": true,

  // Disable features that don't work well with Podman on Windows
  "features": {},

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "biomejs.biome",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "github.vscode-github-actions",
        "github.vscode-pull-request-github",
        "ms-vsliveshare.vsliveshare",
        "irongeek.vscode-env"
      ],
      "settings": {
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "files.trimFinalNewlines": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.detectIndentation": false,
        "typescript.preferences.includePackageJsonAutoImports": "on",
        "typescript.suggest.autoImports": true,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "biomejs.biome",
        "editor.codeActionsOnSave": {
          "source.organizeImports.biome": "explicit",
          "source.fixAll.biome": "explicit"
        }
      }
    }
  },

  // Additional Podman compatibility settings
  "shutdownAction": "none",

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [3000, 5432, 5672, 15672],
  "portsAttributes": {
    "3000": {
      "label": "Next.js App",
      "onAutoForward": "openPreview"
    },
    "5432": {
      "label": "PostgreSQL"
    },
    "5672": {
      "label": "RabbitMQ AMQP"
    },
    "15672": {
      "label": "RabbitMQ Management UI",
      "onAutoForward": "openBrowser"
    }
  },

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root
  "remoteUser": "node",

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "npm install",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "echo 'Dev container is ready! ðŸš€'"
}
